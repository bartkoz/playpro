# Generated by Django 4.0.3 on 2022-05-24 15:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('tournaments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='tournamentteammember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tournamentteam',
            name='captain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='tournamentteam',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.school'),
        ),
        migrations.AddField(
            model_name='tournamentteam',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_teams', to='tournaments.tournament'),
        ),
        migrations.AddField(
            model_name='tournamentmatch',
            name='contestants',
            field=models.ManyToManyField(related_name='matches', to='tournaments.tournamentteam'),
        ),
        migrations.AddField(
            model_name='tournamentmatch',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_matches', to='tournaments.tournament'),
        ),
        migrations.AddField(
            model_name='tournamentmatch',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tournaments.tournamentteam'),
        ),
        migrations.AddField(
            model_name='tournamentgroup',
            name='teams',
            field=models.ManyToManyField(to='tournaments.tournamentteam'),
        ),
        migrations.AddField(
            model_name='tournamentgroup',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tournament_groups', to='tournaments.tournament'),
        ),
        migrations.AddField(
            model_name='tournamentgameplatformmap',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tournaments.tournamentgame'),
        ),
        migrations.AddField(
            model_name='tournamentgameplatformmap',
            name='gamer_tag_types',
            field=models.ManyToManyField(to='tournaments.gamertagchoice'),
        ),
        migrations.AddField(
            model_name='tournamentgameplatformmap',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tournaments.tournamentplatform'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='game',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tournaments.tournamentgame'),
        ),
        migrations.AddField(
            model_name='tournament',
            name='platforms',
            field=models.ManyToManyField(to='tournaments.tournamentplatform'),
        ),
        migrations.AlterUniqueTogether(
            name='tournamentteam',
            unique_together={('captain', 'tournament')},
        ),
    ]
