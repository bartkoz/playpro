# Generated by Django 4.0.3 on 2022-05-24 15:15

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import tournaments.models
import tournaments.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GamerTagChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registration_open_date', models.DateTimeField()),
                ('registration_close_date', models.DateTimeField()),
                ('registration_check_in_date', models.DateTimeField()),
                ('name', models.CharField(max_length=255)),
                ('logo', models.FileField(upload_to='tournaments/88a055ca-2ac5-4b4d-a2a5-6505bbc6c779')),
                ('tournament_img', models.ImageField(blank=True, null=True, upload_to='tournaments/f0a12cd9-2614-4d31-9173-4c2991957e2b')),
                ('team_size', models.PositiveIntegerField()),
                ('playoff_array', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2), blank=True, null=True, size=8)),
                ('match_logo', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentGamePlatformMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stage', models.CharField(choices=[('playoff', 'Playoff'), ('group', 'Group')], max_length=20)),
                ('match_start', models.DateTimeField(blank=True, null=True)),
                ('is_contested', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('contest_screenshot', models.ImageField(blank=True, null=True, upload_to=tournaments.models.result_upload_path, validators=[tournaments.validators.ImageSizeValidator(3)])),
                ('round_number', models.IntegerField(blank=True, null=True)),
                ('chat_channel', models.CharField(default=tournaments.models.create_match_chat, max_length=15)),
                ('place_finished', models.IntegerField(blank=True, null=True)),
                ('result_submitted', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, size=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TournamentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
                ('group_score', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('tournament_joined', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invitation_accepted', models.BooleanField(null=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='tournaments.tournamentteam')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
